// <auto-generated />
using System;
using API_MEI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_MEI.Data.Migrations
{
    [DbContext(typeof(API_MEIContext))]
    partial class API_MEIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API_MEI.Models.Alunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Instituição")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Numero_Aluno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Curso = "Administração",
                            Email = "sofia.silva@gmail.com",
                            Estado = true,
                            Instituição = "Universidade Federal do Rio Grande do Sul",
                            Nome = "Sofia Silva",
                            Numero_Aluno = 845732
                        },
                        new
                        {
                            Id = 2,
                            Curso = "Direito",
                            Email = "lucas.oliveira@yahoo.com",
                            Estado = true,
                            Instituição = "Universidade de Brasília",
                            Nome = "Lucas Oliveira",
                            Numero_Aluno = 678123
                        },
                        new
                        {
                            Id = 3,
                            Curso = "Engenharia Elétrica",
                            Email = "ap.costa@hotmail.com",
                            Estado = false,
                            Instituição = "Universidade Federal de Pernambuco",
                            Nome = "Ana Paula Costa",
                            Numero_Aluno = 923456
                        },
                        new
                        {
                            Id = 4,
                            Curso = "Medicina",
                            Email = "pedro.santos@gmail.com",
                            Estado = true,
                            Instituição = "Universidade de São Paulo",
                            Nome = "Pedro Santos",
                            Numero_Aluno = 346782
                        },
                        new
                        {
                            Id = 5,
                            Curso = "Ciências da Computação",
                            Email = "julia.ferreira@yahoo.com",
                            Estado = true,
                            Instituição = "Universidade Federal de Minas Gerais",
                            Nome = "Julia Ferreira",
                            Numero_Aluno = 812394
                        },
                        new
                        {
                            Id = 6,
                            Curso = "Psicologia",
                            Email = "rafaela.souza@hotmail.com",
                            Estado = false,
                            Instituição = "Universidade Federal do Paraná",
                            Nome = "Rafaela Souza",
                            Numero_Aluno = 473829
                        },
                        new
                        {
                            Id = 7,
                            Curso = "Engenharia Mecânica",
                            Email = "marcos.oliveira@gmail.com",
                            Estado = true,
                            Instituição = "Universidade Estadual de Campinas",
                            Nome = "Marcos Oliveira",
                            Numero_Aluno = 912345
                        },
                        new
                        {
                            Id = 8,
                            Curso = "Design Gráfico",
                            Email = "carla.rodrigues@yahoo.com",
                            Estado = true,
                            Instituição = "Universidade Federal do Rio de Janeiro",
                            Nome = "Carla Rodrigues",
                            Numero_Aluno = 567890
                        },
                        new
                        {
                            Id = 9,
                            Curso = "Engenharia Civil",
                            Email = "gustavo.mendes@hotmail.com",
                            Estado = false,
                            Instituição = "Universidade de São Paulo",
                            Nome = "Gustavo Mendes",
                            Numero_Aluno = 234567
                        },
                        new
                        {
                            Id = 10,
                            Curso = "Letras",
                            Email = "fernanda.oliveira@gmail.com",
                            Estado = true,
                            Instituição = "Universidade Federal de Santa Catarina",
                            Nome = "Fernanda Oliveira",
                            Numero_Aluno = 789012
                        },
                        new
                        {
                            Id = 11,
                            Curso = "Ciências Contábeis",
                            Email = "jose.santos@gmail.com",
                            Estado = true,
                            Instituição = "Universidade Federal do Ceará",
                            Nome = "José Santos",
                            Numero_Aluno = 473829
                        },
                        new
                        {
                            Id = 12,
                            Curso = "Engenharia Química",
                            Email = "amanda.silva@hotmail.com",
                            Estado = false,
                            Instituição = "Universidade de São Paulo",
                            Nome = "Amanda Silva",
                            Numero_Aluno = 923456
                        },
                        new
                        {
                            Id = 13,
                            Curso = "Arquitetura",
                            Email = "mariana.souza@yahoo.com",
                            Estado = true,
                            Instituição = "Universidade Federal do Paraná",
                            Nome = "Mariana Souza",
                            Numero_Aluno = 845732
                        },
                        new
                        {
                            Id = 14,
                            Curso = "Administração",
                            Email = "paulo.santos@gmail.com",
                            Estado = false,
                            Instituição = "Universidade de Brasília",
                            Nome = "Paulo Santos",
                            Numero_Aluno = 678123
                        },
                        new
                        {
                            Id = 15,
                            Curso = "Direito",
                            Email = "gabriel.oliveira@hotmail.com",
                            Estado = true,
                            Instituição = "Universidade Federal de Pernambuco",
                            Nome = "Gabriel Oliveira",
                            Numero_Aluno = 346782
                        },
                        new
                        {
                            Id = 16,
                            Curso = "Medicina Veterinária",
                            Email = "bruna.ferreira@yahoo.com",
                            Estado = true,
                            Instituição = "Universidade de São Paulo",
                            Nome = "Bruna Ferreira",
                            Numero_Aluno = 812394
                        },
                        new
                        {
                            Id = 17,
                            Curso = "Engenharia de Produção",
                            Email = "carlos.oliveira@gmail.com",
                            Estado = false,
                            Instituição = "Universidade Federal de Minas Gerais",
                            Nome = "Carlos Oliveira",
                            Numero_Aluno = 912345
                        },
                        new
                        {
                            Id = 18,
                            Curso = "Psicologia",
                            Email = "laura.rodrigues@hotmail.com",
                            Estado = true,
                            Instituição = "Universidade Federal do Rio Grande do Sul",
                            Nome = "Laura Rodrigues",
                            Numero_Aluno = 567890
                        },
                        new
                        {
                            Id = 19,
                            Curso = "Engenharia de Computação",
                            Email = "fabio.mendes@gmail.com",
                            Estado = true,
                            Instituição = "Universidade Estadual de Campinas",
                            Nome = "Fábio Mendes",
                            Numero_Aluno = 234567
                        },
                        new
                        {
                            Id = 20,
                            Curso = "Design de Interiores",
                            Email = "isabella.oliveira@yahoo.com",
                            Estado = false,
                            Instituição = "Universidade Federal de Santa Catarina",
                            Nome = "Isabella Oliveira",
                            Numero_Aluno = 789012
                        });
                });

            modelBuilder.Entity("API_MEI.Models.Docentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filiacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("API_MEI.Models.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email_empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("API_MEI.Models.Equipa_Orientadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Especialista_Id")
                        .HasColumnType("int");

                    b.Property<int>("Membros_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Especialista_Id");

                    b.ToTable("Equipa_Orientadores");
                });

            modelBuilder.Entity("API_MEI.Models.Especialistas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email_especialista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Empresa_ID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Empresa_ID");

                    b.ToTable("Especialistas");
                });

            modelBuilder.Entity("API_MEI.Models.Juri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data_Defesa")
                        .HasColumnType("datetime2");

                    b.Property<string>("Presidente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vogal_Arguente1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vogal_Arguente2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vogal_Orientador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Juri");
                });

            modelBuilder.Entity("API_MEI.Models.Membros", b =>
                {
                    b.Property<int>("Equipa_Orientadores_Id")
                        .HasColumnType("int");

                    b.Property<int>("Docente_Id")
                        .HasColumnType("int");

                    b.HasKey("Equipa_Orientadores_Id", "Docente_Id");

                    b.HasIndex("Docente_Id");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Alunos_Id")
                        .HasColumnType("int");

                    b.Property<int>("Equipa_Orientadores_Id")
                        .HasColumnType("int");

                    b.Property<int>("Juri_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Alunos_Id")
                        .IsUnique();

                    b.HasIndex("Equipa_Orientadores_Id")
                        .IsUnique();

                    b.HasIndex("Juri_Id")
                        .IsUnique();

                    b.ToTable("Trabalho");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho_Empresa", b =>
                {
                    b.Property<int>("Trabalho_Id")
                        .HasColumnType("int");

                    b.Property<int>("Empresa_Id")
                        .HasColumnType("int");

                    b.Property<string>("Protocolo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Trabalho_Id", "Empresa_Id");

                    b.HasIndex("Empresa_Id");

                    b.ToTable("Trabalho_Empresa");
                });

            modelBuilder.Entity("API_MEI.Models.Equipa_Orientadores", b =>
                {
                    b.HasOne("API_MEI.Models.Especialistas", "Especialistas")
                        .WithMany("Equipa_Orientadores")
                        .HasForeignKey("Especialista_Id");

                    b.Navigation("Especialistas");
                });

            modelBuilder.Entity("API_MEI.Models.Especialistas", b =>
                {
                    b.HasOne("API_MEI.Models.Empresas", "Empresas")
                        .WithMany("Especialistas")
                        .HasForeignKey("Empresa_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("API_MEI.Models.Membros", b =>
                {
                    b.HasOne("API_MEI.Models.Docentes", "Docentes")
                        .WithMany("Membros")
                        .HasForeignKey("Docente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Equipa_Orientadores", "Equipa_Orientadores")
                        .WithMany("Membros")
                        .HasForeignKey("Equipa_Orientadores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docentes");

                    b.Navigation("Equipa_Orientadores");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho", b =>
                {
                    b.HasOne("API_MEI.Models.Alunos", "Alunos")
                        .WithOne("Trabalho")
                        .HasForeignKey("API_MEI.Models.Trabalho", "Alunos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Equipa_Orientadores", "Equipa_Orientadores")
                        .WithOne("Trabalho")
                        .HasForeignKey("API_MEI.Models.Trabalho", "Equipa_Orientadores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Juri", "Juri")
                        .WithOne("Trabalho")
                        .HasForeignKey("API_MEI.Models.Trabalho", "Juri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Equipa_Orientadores");

                    b.Navigation("Juri");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho_Empresa", b =>
                {
                    b.HasOne("API_MEI.Models.Empresas", "Empresas")
                        .WithMany("Trabalho_Empresa")
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Trabalho", "Trabalho")
                        .WithMany("Trabalho_Empresa")
                        .HasForeignKey("Trabalho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");

                    b.Navigation("Trabalho");
                });

            modelBuilder.Entity("API_MEI.Models.Alunos", b =>
                {
                    b.Navigation("Trabalho");
                });

            modelBuilder.Entity("API_MEI.Models.Docentes", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("API_MEI.Models.Empresas", b =>
                {
                    b.Navigation("Especialistas");

                    b.Navigation("Trabalho_Empresa");
                });

            modelBuilder.Entity("API_MEI.Models.Equipa_Orientadores", b =>
                {
                    b.Navigation("Membros");

                    b.Navigation("Trabalho")
                        .IsRequired();
                });

            modelBuilder.Entity("API_MEI.Models.Especialistas", b =>
                {
                    b.Navigation("Equipa_Orientadores");
                });

            modelBuilder.Entity("API_MEI.Models.Juri", b =>
                {
                    b.Navigation("Trabalho")
                        .IsRequired();
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho", b =>
                {
                    b.Navigation("Trabalho_Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
