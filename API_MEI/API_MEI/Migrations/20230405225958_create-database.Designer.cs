// <auto-generated />
using System;
using API_MEI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_MEI.Migrations
{
    [DbContext(typeof(API_MEIContext))]
    [Migration("20230405225958_create-database")]
    partial class createdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API_MEI.Models.Alunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Instituição")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Numero_Aluno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("API_MEI.Models.Docentes", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filiacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("API_MEI.Models.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("API_MEI.Models.Equipa_Orientadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Orientador1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orientador2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orientador3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipa_Orientadores");
                });

            modelBuilder.Entity("API_MEI.Models.Especialistas", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Empresa_ID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Empresa_ID");

                    b.ToTable("Especialistas");
                });

            modelBuilder.Entity("API_MEI.Models.Juri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Data_Defesa")
                        .HasColumnType("datetime2");

                    b.Property<string>("Presidente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vogal_Arguente1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vogal_Arguente2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vogal_Orientador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Juri");
                });

            modelBuilder.Entity("API_MEI.Models.Membros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Docente_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Equipa_Orientadores_Id")
                        .HasColumnType("int");

                    b.Property<string>("Especialista_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Docente_Id");

                    b.HasIndex("Equipa_Orientadores_Id");

                    b.HasIndex("Especialista_Id");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Alunos_Id")
                        .HasColumnType("int");

                    b.Property<int>("Equipa_Orientadores_Id")
                        .HasColumnType("int");

                    b.Property<int>("Juri_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Alunos_Id")
                        .IsUnique();

                    b.HasIndex("Equipa_Orientadores_Id")
                        .IsUnique();

                    b.HasIndex("Juri_Id")
                        .IsUnique();

                    b.ToTable("Trabalho");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho_Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Empresa_Id")
                        .HasColumnType("int");

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trabalho_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Trabalho_Id");

                    b.ToTable("Trabalho_Empresa");
                });

            modelBuilder.Entity("API_MEI.Models.Especialistas", b =>
                {
                    b.HasOne("API_MEI.Models.Empresas", "Empresas")
                        .WithMany("Especialistas")
                        .HasForeignKey("Empresa_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("API_MEI.Models.Membros", b =>
                {
                    b.HasOne("API_MEI.Models.Docentes", "Docentes")
                        .WithMany("Membros")
                        .HasForeignKey("Docente_Id");

                    b.HasOne("API_MEI.Models.Equipa_Orientadores", "Equipa_Orientadores")
                        .WithMany("Membros")
                        .HasForeignKey("Equipa_Orientadores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Especialistas", "Especialistas")
                        .WithMany("Membros")
                        .HasForeignKey("Especialista_Id");

                    b.Navigation("Docentes");

                    b.Navigation("Equipa_Orientadores");

                    b.Navigation("Especialistas");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho", b =>
                {
                    b.HasOne("API_MEI.Models.Alunos", "Alunos")
                        .WithOne("Trabalho")
                        .HasForeignKey("API_MEI.Models.Trabalho", "Alunos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Equipa_Orientadores", "Equipa_Orientadores")
                        .WithOne("Trabalho")
                        .HasForeignKey("API_MEI.Models.Trabalho", "Equipa_Orientadores_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Juri", "Juri")
                        .WithOne("Trabalho")
                        .HasForeignKey("API_MEI.Models.Trabalho", "Juri_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Equipa_Orientadores");

                    b.Navigation("Juri");
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho_Empresa", b =>
                {
                    b.HasOne("API_MEI.Models.Empresas", "Empresas")
                        .WithMany("Trabalho_Empresa")
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_MEI.Models.Trabalho", "Trabalho")
                        .WithMany("Trabalho_Empresa")
                        .HasForeignKey("Trabalho_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");

                    b.Navigation("Trabalho");
                });

            modelBuilder.Entity("API_MEI.Models.Alunos", b =>
                {
                    b.Navigation("Trabalho");
                });

            modelBuilder.Entity("API_MEI.Models.Docentes", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("API_MEI.Models.Empresas", b =>
                {
                    b.Navigation("Especialistas");

                    b.Navigation("Trabalho_Empresa");
                });

            modelBuilder.Entity("API_MEI.Models.Equipa_Orientadores", b =>
                {
                    b.Navigation("Membros");

                    b.Navigation("Trabalho")
                        .IsRequired();
                });

            modelBuilder.Entity("API_MEI.Models.Especialistas", b =>
                {
                    b.Navigation("Membros");
                });

            modelBuilder.Entity("API_MEI.Models.Juri", b =>
                {
                    b.Navigation("Trabalho")
                        .IsRequired();
                });

            modelBuilder.Entity("API_MEI.Models.Trabalho", b =>
                {
                    b.Navigation("Trabalho_Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
